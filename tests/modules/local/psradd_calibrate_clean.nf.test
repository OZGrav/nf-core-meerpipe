nextflow_process {

    name "Test Process PSRADD_CALIBRATE_CLEAN"
    script "modules/local/psradd_calibrate_clean.nf"
    process "PSRADD_CALIBRATE_CLEAN"

    test("J1534-5334_2023-05-05-01:07:10_1: period: slow   DM: low    obs_len: short ") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J1534-5334_2023-05-05-01:07:10_1",
                            pulsar: "J1534-5334",
                            utc: "2023-05-05-01:07:10",
                            beam: 1,
                            dur: 116.53766938317756,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J1534-5334.par",
                    "$baseDir/tests/test_data/J1534-5334.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 259.778747558594 * 0.99
        }
    }

    test("J1418-3921_2020-08-08-11:55:30_4: period: slow   DM: medium obs_len: short ") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J1418-3921_2020-08-08-11:55:30_4",
                            pulsar: "J1418-3921",
                            utc: "2020-08-08-11:55:30",
                            beam: 4,
                            dur: 233.7823401869157,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J1418-3921.par",
                    "$baseDir/tests/test_data/J1418-3921.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 184.475296020508 * 0.99
        }
    }

    test("J1013-5934_2020-01-04-20:29:13_1: period: slow   DM: high   obs_len: short ") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J1013-5934_2020-01-04-20:29:13_1",
                            pulsar: "J1013-5934",
                            utc: "2020-01-04-20:29:13",
                            beam: 1,
                            dur: 457.50813667289714,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J1013-5934.par",
                    "$baseDir/tests/test_data/J1013-5934.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 736.987731933594 * 0.99
        }
    }

    test("J1410-7404_2020-09-05-10:00:47_2: period: medium DM: medium obs_len: short ") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J1410-7404_2020-09-05-10:00:47_2",
                            pulsar: "J1410-7404",
                            utc: "2020-09-05-10:00:47",
                            beam: 2,
                            dur: 89.60730437383191,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J1410-7404.par",
                    "$baseDir/tests/test_data/J1410-7404.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 80.4668273925781 * 0.99
        }
    }

    test("J0437-4715_2019-03-26-16:26:02_1: period: MSP    DM: low    obs_len: short ") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J0437-4715_2019-03-26-16:26:02_1",
                            pulsar: "J0437-4715",
                            utc: "2019-03-26-16:26:02",
                            beam: 1,
                            dur: 15.999999999999988,
                            cal_loc: "/fred/oz005/users/aparthas/reprocessing_MK/poln_calibration/2019-03-26-16:10:39.jones",
                        ],
                    "$baseDir/tests/test_data/J0437-4715.par",
                    "$baseDir/tests/test_data/J0437-4715.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 9052.873046875 * 0.99
        }
    }

    test("J1919+0021_2020-11-30-14:55:13_4: period: slow   DM: medium obs_len: medium") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J1919+0021_2020-11-30-14:55:13_4",
                            pulsar: "J1919+0021",
                            utc: "2020-11-30-14:55:13",
                            beam: 4,
                            dur: 1318.9994574953269,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J1919+0021.par",
                    "$baseDir/tests/test_data/J1919+0021.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 1485.11828613281 * 0.99
        }
    }

    test("J0514-4408_2020-02-21-17:50:16_1: period: medium DM: low    obs_len: medium no template") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J0514-4408_2020-02-21-17:50:16_1",
                            pulsar: "J0514-4408",
                            utc: "2020-02-21-17:50:16",
                            beam: 1,
                            dur: 1800.00,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J0514-4408.par",
                    "$baseDir/tests/test_data/no_template.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert process.out.get(0)[0][5] == "None"
        }
    }

    test("J0900-3144_2021-04-20-14:47:54_3: period: medium DM: medium obs_len: medium") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J0900-3144_2021-04-20-14:47:54_3",
                            pulsar: "J0900-3144",
                            utc: "2021-04-20-14:47:54",
                            beam: 3,
                            dur: 2047.541722352941,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J0900-3144.par",
                    "$baseDir/tests/test_data/J0900-3144.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 1602.21850585938 * 0.99
        }
    }

    test("J1811-2405_2019-09-24-13:51:57_1: period: MSP    DM: medium obs_len: long  ") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J1811-2405_2019-09-24-13:51:57_1",
                            pulsar: "J1811-2405",
                            utc: "2019-09-24-13:51:57",
                            beam: 1,
                            dur: 7205.58,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J1811-2405.par",
                    "$baseDir/tests/test_data/J1811-2405.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 885.953430175781 * 0.99
        }
    }

    test("J0955-6150_2019-10-07-02:26:56_1: period: MSP    DM: large  obs_len: long  ") {
        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] =  Channel.fromList([
                    tuple(
                        // meta map
                        [
                            id: "J0955-6150_2019-10-07-02:26:56_1",
                            pulsar: "J0955-6150",
                            utc: "2019-10-07-02:26:56",
                            beam: 1,
                            dur: 14402.60,
                            cal_loc: "",
                        ],
                    "$baseDir/tests/test_data/J0955-6150.par",
                    "$baseDir/tests/test_data/J0955-6150.std",
                    )
                ])
                """
            }
        }
        then {
            assert process.success
            assert Float.valueOf(process.out.get(0)[0][5]) >= 833.4445 * 0.99
        }
    }

}
